"front","back","tags"
"bsim: the three ways to do function calls?","(1) macros (aka inlining), (2) subtroutines with static allocation, and (3) function stacks",
"bsim: what does BR(square,LP) do?","LP (which is R28) stores the address to the current instruction it’s used in",
"bsim: what does JMP(LP) do?","jumps back to the address stored in LP (which is R28)",
"bsim: can you use labels within .macro?","no (expansion can result in duplicate labels)",
"bsim: another word for using macros","inlining",
"bsim: advantages of using macros","simple, no overhead (faster)",
"bsim: disadvantages of using macros","compiled binary code grows with number of calls to macros, need to be careful about clobbered registers, hard to debug, no recursion",
"bsim: inlining is good for?","short code (e.g. set/get)",
"bsim: subroutines with static allocation only needs (...) copy of function code","one",
"bsim: LP stands for?","linkage pointer",
"bsim: LP points to what register?","R28",
"bsim: LP holds?","return address",
"bsim: advantages of using subroutines with static allocation?","single copy of code (saves space), can use memory for storage",
"bsim: disadvantages of using subroutines with static allocation?","clobber registers, no nested function calls, no recursion",
"bsim: SP is assumed to initially contain a (...) value","high",
"bsim: storage requirements of each function call is placed in a?","stack frame",
"bsim: the stack frame contains?",,
"bsim: BP stands for?","base pointer",
"bsim: BP points to what register?","R27",
"bsim: BP holds?","address of the first local variable in a functiion’s stack frame",
"bsim: SP stands for?","stack pointer",
"bsim: SP points to what register?","R29",
"bsim: SP holds?","address of the line above the top of the stack",
"bsim: BP, LP, SP, and XP points to what registers? (BMSX)","R27, R28, R29, R30 (start at 27)",
"bsim: R27, R28, R29, and R30 is pointed to by?","BP, LP, SP, XP (BLSX)",
"bsim: XP stands for?","exception pointer",
"bsim: XP points to what register?","R30",
"bsim: function arguments for a stack frame appear in (...) order","reverse",
"bsim: macros are expanded when?","at compile-time",
"bsim: temporary registers are also called?","clobbered registers",
