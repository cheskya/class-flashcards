#tags: CSCI50.01 CSCI50.01-Module5
#tags column: 3
#deck: "CSCI 50.01 Module 5"
#separator: comma
"comparch: opcode stands for?","operational code","computer-architecture operations"
"comparch,opcode: is part of every (...)","instruction","computer-architecture operations"
"comparch,opcode: tells the hardware (...)","what operation needs to be performed with an instruction","computer-architecture operations"
"comparch: the seven opcode categories?","(1) data transfer, (2) arithmetic, (3) logical, (4) conversion, (5) I/O, (6) system control, and (7) transfer of control","computer-architecture operations"
"comparch: most fundamental type of instruction?","data transfer","computer-architecture operations"
"comparch: simplest type of instruction in terms of processor action?","data transfer","computer-architecture operations"
"opcode,datatr: the two operands of a data transfer instruction?","source and destination","computer-architecture operations data-transfer"
"opcode,datatr: instruction must specify?","(1) location of each operand, (2) length of data to be transferred, and (3) mode of addressing for each operand","computer-architecture operations data-transfer"
"opcode,datatr: if both operands are registers?","processor copies data from one register to another","computer-architecture operations data-transfer"
"opcode,datatr: if one/both operands are in memory?","(1) calculate memory address, (2) translate from virtual to real memory address, (3) determine if addressed item is in cache","computer-architecture operations data-transfer"
"opcode,arth: execution of instruction may involve?","data transfer operations, and delivery of output to a destination","computer-architecture operations arithmetic"
"opcode,arth: single-operand instructions?","absolute, negate, increment decrement","computer-architecture operations arithmetic"
"opcode,arth: absolute does what?","take the absolute value of the operand","computer-architecture operations arithmetic"
"opcode,arth: negate does what?","negate the operand","computer-architecture operations arithmetic"
"opcode,arth: increment does what?","add 1 to the operand","computer-architecture operations arithmetic"
"opcode,arth: decrement does what?","subtract 1 from the operand","computer-architecture operations arithmetic"
"opcode,log: definition of bit twiddling","manipulating individual bits of a word or other addressable units","computer-architecture operations logical"
"opcode,log: (logical) bit shifting does what?","shift bits of a word left or right (bit shifted out is lost, bit shifted in is 0 or 1)","computer-architecture operations logical"
"opcode,log: bit shifting is useful primarily for?","isolating fields within a word","computer-architecture operations logical"
"opcode,log: arithmetic shift treats the data as a (...)","signed integer","computer-architecture operations logical"
"opcode,log: arithmetic shift does not shift the (...) bit","sign","computer-architecture operations logical"
"opcode,log: arithmetic shift can speed up (...)","certain arithmetic operations","computer-architecture operations logical"
"opcode,log: right arithmetic shift does what?","sign bit is replicated into the bit position to its right","computer-architecture operations logical"
"opcode,log: left arithmetic shift does what?","logical left shift is performed on all bits except the sign bit, which is retained","computer-architecture operations logical"
"opcode,log: logical rotate is also known as (...)","cyclic shift","computer-architecture operations logical"
"opcode,log: logical rotate perserves?","all of the bits being operated on","computer-architecture operations logical"
"comparch: each instruction has a (...) opcode","different","computer-architecture operations"
"comparch: different instructions can have (...) steps","similar","computer-architecture operations"
"comparch: “Move” is in what category of opcode?","data transfer","computer-architecture operations data-transfer"
"comparch: “Store” is in what category of opcode?","data transfer","computer-architecture operations data-transfer"
"comparch: “Load” is in what category of opcode?","data transfer","computer-architecture operations data-transfer"
"comparch: “Exchange” is in what category of opcode?","data transfer","computer-architecture operations data-transfer"
"comparch: “Clear” is in what category of opcode?","data transfer","computer-architecture operations data-transfer"
"comparch: “Set” is in what category of opcode?","data transfer","computer-architecture operations data-transfer"
"comparch: “Push” is in what category of opcode?","data transfer","computer-architecture operations data-transfer"
"comparch: “Pop” is in what category of opcode?","data transfer","computer-architecture operations data-transfer"
"comparch: “Add” is in what category of opcode?","arithmetic","computer-architecture operations arithmetic"
"comparch: “Subtract” is in what category of opcode?","arithmetic","computer-architecture operations arithmetic"
"comparch: “Multiply” is in what category of opcode?","arithmetic","computer-architecture operations arithmetic"
"comparch: “Divide” is in what category of opcode?","arithmetic","computer-architecture operations arithmetic"
"comparch: “Absolute” is in what category of opcode?","arithmetic","computer-architecture operations arithmetic"
"comparch: “Negate” is in what category of opcode?","arithmetic","computer-architecture operations arithmetic"
"comparch: “Increment” is in what category of opcode?","arithmetic","computer-architecture operations arithmetic"
"comparch: “Decrement” is in what category of opcode?","arithmetic","computer-architecture operations arithmetic"
"comparch: “AND” is in what category of opcode?","logical","computer-architecture operations logical"
"comparch: “OR” is in what category of opcode?","logical","computer-architecture operations logical"
"comparch: “NOT” is in what category of opcode?","logical","computer-architecture operations logical"
"comparch: “Exclusive-OR” is in what category of opcode?","logical","computer-architecture operations logical"
"comparch: “Test” is in what category of opcode?","logical","computer-architecture operations logical"
"comparch: “Compare” is in what category of opcode?","logical","computer-architecture operations logical"
"comparch: “Set” is in what category of opcode?","logical","computer-architecture operations logical"
"comparch: “Shift” is in what category of opcode?","logical","computer-architecture operations logical"
"comparch: “Rotate” is in what category of opcode?","logical","computer-architecture operations logical"
"comparch: “Translate” is in what category of opcode?","conversion","computer-architecture operations conversion"
"comparch: “Convert” is in what category of opcode?","conversion","computer-architecture operations conversion"
"comparch: “Input” is in what category of opcode?","input/output or I/O","computer-architecture operations I/O"
"comparch: “Output” is in what category of opcode?","input/output or I/O","computer-architecture operations I/O"
"comparch: “Start I/O” is in what category of opcode?","input/output or I/O","computer-architecture operations I/O"
"comparch: “Test I/O” is in what category of opcode?","input/output or I/O","computer-architecture operations I/O"
"comparch: “Jump” is in what category of opcode?","transfer of control","computer-architecture operations transfer-of-control"
"comparch: “Jump Conditional” is in what category of opcode?","transfer of control","computer-architecture operations transfer-of-control"
"comparch: “Jump to Subroutine” is in what category of opcode?","transfer of control","computer-architecture operations transfer-of-control"
"comparch: “Return” is in what category of opcode?","transfer of control","computer-architecture operations transfer-of-control"
"comparch: “Execute” is in what category of opcode?","transfer of control","computer-architecture operations transfer-of-control"
"comparch: “Skip” is in what category of opcode?","transfer of control","computer-architecture operations transfer-of-control"
"comparch: “Skip Conditional” is in what category of opcode?","transfer of control","computer-architecture operations transfer-of-control"
"comparch: “Halt” is in what category of opcode?","transfer of control","computer-architecture operations transfer-of-control"
"comparch: “Wait” is in what category of opcode?","transfer of control","computer-architecture operations transfer-of-control"
"comparch: “No Operation” is in what category of opcode?","transfer of control","computer-architecture operations transfer-of-control"
"comparch: opcode that transfers word or block from source to destination","Move (transfer)","computer-architecture operations data-transfer"
"comparch: opcode that transfers word from processor to memory","Store","computer-architecture operations data-transfer"
"comparch: opcode that transfers word from memory to processor","Load (fetch)","computer-architecture operations data-transfer"
"comparch: opcode that swaps contents of sourcce and destination","Exchange","computer-architecture operations data-transfer"
"comparch: opcode that transfers word of 0’s to destination","Clear (reset)","computer-architecture operations data-transfer"
"comparch: opcode that transfers word of 1’s to destination","Set","computer-architecture operations data-transfer"
"comparch: opcode that transfers word from source to top of stack","Push","computer-architecture operations data-transfer"
"comparch: opcode that transfers word from top of stack to destination","Pop","computer-architecture operations data-transfer"
"comparch: opcode that computes the sum of two operands","Add","computer-architecture operations arithmetic"
"comparch: opcode that computes the difference of two operands","Subtract","computer-architecture operations arithmetic"
"comparch: opcode that computes the product of two operands","Multiply","computer-architecture operations arithmetic"
"comparch: opcode that computes the quotient of two operands (and remainder if applicable)","Divide","computer-architecture operations arithmetic"
"comparch: opcode that replaces operands with its absolute value","Absolute","computer-architecture operations arithmetic"
"comparch: opcode that changes the sign of operand","Negate","computer-architecture operations arithmetic"
"comparch: opcode that adds 1 to operand","Increment","computer-architecture operations arithmetic"
"comparch: opcode that subtracts 1 from operand","Decrement","computer-architecture operations arithmetic"
"comparch: opcode that performs logical AND","AND","computer-architecture operations logical"
"comparch: opcode that performs logical OR","OR","computer-architecture operations logical"
"comparch: opcode that performs logical NOT","NOT (complement)","computer-architecture operations logical"
"comparch: opcode that performs logical XOR","Exclusive-OR","computer-architecture operations logical"
"comparch: opcode that tests specified condition","Test","computer-architecture operations logical"
"comparch: opcode that makes logical or arithmetic comparison of two or more operands","Compare","computer-architecture operations logical"
"comparch: opcode that controls variables class of instructions","Set","computer-architecture operations logical"
"comparch: opcode that left/right shifts operand, introducing constants at the end","Shift","computer-architecture operations logical"
"comparch: opcode that left/right shifts operand, with wraparound end","Rotate","computer-architecture operations logical"
"comparch: opcode that translates values in a section of memory","Translate","computer-architecture operations conversion"
"comparch: opcode that converts the contents of a word from one form to another","Convert","computer-architecture operations conversion"
"comparch: opcode that transfers data from specified I/O port/device to destination","Input (read)","computer-architecture operations I/O"
"comparch: opcode that transfers data from specified source to I/O port or device","Output (write)","computer-architecture operations I/O"
"comparch: opcode that transfers instructions to I/O processor","Start I/O","computer-architecture operations I/O"
"comparch: opcode that transfers status information from I/O system to specified destination","Test I/O","computer-architecture operations I/O"
"comparch: opcode that does unconditional transfer, then load PC with specified address","Jump (Branch)","computer-architecture operations transfer-of-control"
"comparch: opcode that tests specified condition then either load PC with specified address or do nothing","Jump Conditional","computer-architecture operations transfer-of-control"
"comparch: opcode that places current program control information in known location, then jump to specified address","Jump to Soubtroutine","computer-architecture operations transfer-of-control"
"comparch: opcode that replaces contents of PC and other register from known location","Return","computer-architecture operations transfer-of-control"
"comparch: opcode that fetches operand from specified location and execute as instruction","Execute","computer-architecture operations transfer-of-control"
"comparch: opcode that increments PC to skip next instruction","Skip","computer-architecture operations transfer-of-control"
"comparch: opcode that tests specified condition and either skip or do nothing","Skip Conditional","computer-architecture operations transfer-of-control"
"comparch: opcode that stops program execution","Halt","computer-architecture operations transfer-of-control"
"comparch: opcode that stops program execution, tests a specified condition repeatedly, and resume execution when condition is satisfied","Wait (hold)","computer-architecture operations transfer-of-control"
"comparch: opcode where no operation is performed, but program execution is continued","No Operation","computer-architecture operations transfer-of-control"
